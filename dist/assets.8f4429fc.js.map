{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","toggleMute","AutoPlay","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","button","muteButton","onclick","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,ACAA,SDASA,ACAAoB,QAAT,GDAA,ACAoB,CDACnB,ACEpB,MDFD,EAA6B;AACzB,OAAKC,KAAL,GAAaD,MAAM,CAACE,EAApB;AACA,ACEJiB,ODFShB,CCED,CAACE,KDFL,GAAeL,CCEnB,CAAmBa,GAAnB,CDFyB,CAACV,CCED,MDFN,IAAkB,ACEFG,EDF/B,ICEqB,EAAkB;AEA3C,AFCI,IEDE6B,EFCE7B,GEDG,GAAGsB,AFCA,CAACnB,KAAX,EEDkB,AFCA,CEDC2B,aAAT,CAAuB,OAAvB,CAAd;AHCI,AGAJ,AFCQ9B,IEDF+B,AFCE/B,GDDCF,GGAG,AFCE,CAACK,EEDAmB,GFCP,GDDJ,ACCmB,EEDA,CAACQ,CFChB,YEDO,CAAuB,QAAvB,CAAf;AHCC,AGAD,AFCK,IEDCE,UAAU,GAAGV,QAAQ,CAACQ,aAAT,CAAuB,UAAvB,CAAnB;AAEA,IAAM9B,ADRAc,MCQM,GAAG,IAAIrB,oBAAJ,CAAgB;AHC/BA,AGAEG,ADRE,ADOAI,EECFJ,AFDEI,EECA,EAAE6B,EFDI,CAAC5B,EDCA,AGDoB,CHCnBF,CCDR,QDCJ,CAAsBD,CERJ,WFQlB,GAAqC,YAAY;AAAA,AGC/CD,ADTgB,ADQjB,CALD,CEMEA,OAAO,EAAE,CAAC,IAAIgB,iBAAJ,EAAD,EAAiB,IAAIC,kBAAJ,EAAjB;AAFoB,CAAhB,CAAf;AHEI,AERI,MFQEd,GERGe,GFQG,GAAG,ACEJF,GCVP,GAAiB,IAAjB;AFSAZ,AGER8B,ADVQ,IFQA9B,EGEF,CAACgC,CHFK,CERCjB,CFQC,IGEd,GAAiB,UDVT,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFQM,AGEG,ADTT,SCSejB,ADTVkB,IFOO,EGES,CAACV,EHFN,CAACP,IAAL,EAAN,CGES,EAAN,GDTT,GAA8B,KAAKiB,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFOM,AGEG,ADRZ,CCQL,IHHmB;AAEXf,IAAAA,KAAK,EAAE;AAAA,AGEf8B,UAAU,CAACC,EHFU,KAAI,AGEzB,CHF0B/B,EGEL,GHFA,EAAN;AAAA,AGEM,KHJF,IGIQF,MAAM,CAACY,UAAP,EAAN;AHDbjB,AGCa,CAArB,GHDQA,KAAK,EAAE,AEPX,KFOgBA,KAHD,GEJXK,MAAJ,EAAY;AACR,WAAKA,MAAL,GAAcA,MAAd;AFOA,AGER,ADRQ,ICQJ,IHFQG,EENEgB,GFMN,GAAY,EENE,GAAG,ECQFe,EDRMd,OCQ7B,EAAkC,WDRT,CAAyB,KAAKJ,kBAA9B,EAAkD;AFO/D,AGEVkB,ADRUnB,ECQVmB,MDRUnB,GCQD,CAACoB,CHFO,IENE,CFMGxC,CEND,IFMJ,CAAWQ,AENFY,CCQ1B,CAAwBqB,GHFd,KGEV,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiD,UAACC,KAAD,EAAW;AHDrD,AGELC,ADVuE,ICUvEA,CHRe,EEFM,CAAjB,GCUG,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,ADPKtB,GCKN,GDLMA,QAAQ,CAACE,OAAT,CAAiBrB,MAAM,CAACL,KAAxB;AFMA,AGEP,ADLO2B,MAAAA,EFGInB,KAAJ,CAAUC,AEHF,CAACmB,IFGT,EAAiB,UEHjB,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFII,AEFP,WFEYvB,KAAL,CAAWQ,KAAX,GAAmBC,KAAnB;AACH;;AAVU,GAAf,QEWA,4BAAmBoB,OAAnB,EAA4B;AFG5B,AEFI,OFEC3B,GEFK4B,IFEV,CAAapB,AEFE,GAAGmB,IFElB,CAAqB,EEFI,CAAC,CAAD,CAArB,KFEiBlB,MAAM,EAAI;AAC3BA,AEDA,IFCAA,MAAM,AEDAoB,CFCCnB,GAAP,CAAWP,IEDI,EFCf,CEDkByB,KAAK,CAACE,iBAAN,IAA2B,KAAKZ,SAAlD;AFEH,GAFD;AAGH,AEFO,CFhBR,SEgBYW,SAAJ,EAAe;AACX,aAAK1B,MAAL,CAAYC,IAAZ;AFIZR,AEHS,OAFD,IFKG,CAACM,CEHG,QFGf,CAAsBE,IAAtB,GAA6B,YAAY;AACrC,AEHQ,OFGHN,KAAL,CAAWM,AEHED,IFGb,EEHQ,CAAYE,KAAZ;AFIX,AEHQ,CFCT;AECK;AFGLT,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAY;AACtC,OAAKP,KAAL,CAAWO,KAAX;AACH,CAFD,UEFI,kCAAyB;AACrB,UAAMwB,SAAS,GAAGJ,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFKRnC,WAAW,CAACM,SAAZ,CAAsBS,UAAtB,GAAmC,YAAY;AAC3C,AELI,OFKCb,GELG+B,EFKR,CAAWjB,MAAX,AELI,EAAe,CFKC,KAAKR,IAAL,EAApB,GAAkC,KAAKC,KAAL,EAAlC;AACH,AELW,CFGZ,YEHiBF,MAAL,CAAYC,IAAZ;AACH,OAFD,MAEO;AFMfR,AEJY,WFID,CAACM,CEJKC,MAAL,CAAYE,CFIxB,CAAsBQ,GEJV,CFIZ,GAA6B,YAAY;AACrC,AEJK,OFIAf,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACH,AEJI,CFEL;;AAGAV,WAAW,CAACM,SAAZ,CAAsBY,MAAtB,GAA+B,YAAY;AACvC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACH,CAFD;;AAIAV,WAAW,CAACM,GEHGe,MFGf,CAAsBF,UAAtB,GAAmC,YAAY;AAC3C,OAAKjB,KAAL,CAAWQ,KAAX,GAAmB,CAAC,KAAKR,KAAL,CAAWQ,KAA/B;AACH,CAFD;;eAKeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n\r\n\r\n    this._initPlugins();\r\n}\r\n\r\n\r\nMediaPlayer.prototype._initPlugins = function () {\r\n    const player = {\r\n        play: () => this.play(),\r\n        pause: () => this.pause(),\r\n        media: this.media,\r\n        get muted() {\r\n            return this.media.muted;\r\n        },\r\n\r\n        set muted(value) {\r\n            this.media.muted = value;\r\n        }\r\n    };\r\n\r\n\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player);\r\n    })\r\n}\r\n\r\n\r\nMediaPlayer.prototype.play = function () {\r\n    this.media.play();\r\n}\r\n\r\nMediaPlayer.prototype.pause = function () {\r\n    this.media.pause();\r\n}\r\n\r\nMediaPlayer.prototype.togglePlay = function () {\r\n    this.media.paused ? this.play() : this.pause();\r\n}\r\n\r\nMediaPlayer.prototype.mute = function () {\r\n    this.media.muted = true;\r\n}\r\nMediaPlayer.prototype.unmute = function () {\r\n    this.media.muted = false;\r\n}\r\n\r\nMediaPlayer.prototype.toggleMute = function () {\r\n    this.media.muted = !this.media.muted;\r\n}\r\n\r\n\r\nexport default MediaPlayer;","function AutoPlay() {\r\n\r\n}\r\n\r\nAutoPlay.prototype.run = function (player) {\r\n    if (player.muted) {\r\n        player.muted = true;\r\n    }\r\n    player.play();\r\n}\r\n\r\n\r\nexport default AutoPlay;","class AutoPause {\r\n    constructor() {\r\n        this.threshold = 0.25\r\n        this.handleIntersection = this.handleIntersection.bind(this)\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this)\r\n    }\r\n    run(player) {\r\n        this.player = player;\r\n        const observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: this.threshold\r\n        })\r\n\r\n        observer.observe(player.media)\r\n\r\n\r\n        document.addEventListener('visibilitychange', this.handleVisibilityChange)\r\n\r\n    }\r\n\r\n\r\n\r\n    handleIntersection(entries) {\r\n        const entry = entries[0];\r\n\r\n        const isVisible = entry.intersectionRatio >= this.threshold;\r\n        if (isVisible) {\r\n            this.player.play();\r\n        } else {\r\n            this.player.pause();\r\n        }\r\n\r\n    }\r\n    handleVisibilityChange() {\r\n        const isVisible = document.visibilityState === 'visible';\r\n        if (isVisible) {\r\n            this.player.play();\r\n        } else {\r\n\r\n            this.player.pause();\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default AutoPause;","import MediaPlayer from \"./MediaPlayer.js\";\r\nimport AutoPlay from \"./plugins/AutoPlay.js\";\r\nimport AutoPause from \"./plugins/AutoPause.js\";\r\n\r\nconst video = document.querySelector(\"video\");\r\nconst button = document.querySelector(\"button\");\r\nconst muteButton = document.querySelector(\"#un-mute\");\r\n\r\nconst player = new MediaPlayer({\r\n  el: video,\r\n  plugins: [new AutoPlay(), new AutoPause()],\r\n});\r\n\r\nbutton.onclick = () => player.togglePlay();\r\nmuteButton.onclick = () => player.toggleMute();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\r\n    console.log(error.message);\r\n  });\r\n}\r\n"]}