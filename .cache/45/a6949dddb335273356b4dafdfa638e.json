{"id":"ejercicios/prototype.html","dependencies":[{"name":"D:\\Angel\\source\\Repos\\Javascript-profesional\\package.json","includedInParent":true,"mtime":1642749196462}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Prototype</title>\r\n</head>\r\n\r\n<body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n\r\n    <script>//Un objecto comun y corriente\n// const spiderman = {\n//     name: \"Spiderman\"\n// }\n// spiderman.saludar = function () {\n//     console.log(`Hola soy ${this.name}`)\n// }\n// spiderman.saludar();\n// //Otro objecto mas\n// const venom = {\n//     name: \"Venom\"\n// }\n// venom.saludar = function () {\n//     console.log(`Hola soy ${this.name}`)\n// }\n// venom.saludar();\n//Seamos mas eficientes\n// function Hero(name) {\n//     const hero = {\n//         name: name\n//     }\n//     hero.saludar = function () {\n//         console.log(`Hola soy ${this.name}`)\n//     }\n//     return hero;\n// }\n// const spiderman = Hero('Spiderman');\n// spiderman.saludar();\n// const venom = Hero('Venom');\n// venom.saludar();\n//Aun podemos mejorar mas y evitar tener que crear la misma funcion cada vez\n// const heroMethods = {\n//     saludar: function () {\n//         console.log(`Me llamo ${this.name}`)\n//     }\n// }\n// function Hero(name) {\n//     const hero = {\n//         name: name\n//     }\n//     hero.saludar = heroMethods.saludar;\n//     return hero;\n// }\n// const spiderman = Hero('Spiderman');\n// spiderman.saludar();\n// const venom = Hero('Venom');\n// venom.saludar();\n//Object.create\n// const nuevoObjecto = Object.create()\n// const heroMethods = {\n//     saludar: function () {\n//         console.log(`Soy el superheroe ${this.name}`)\n//     }\n// }\n// function Hero(name) {\n//     const hero = Object.create(heroMethods);\n//     hero.name = name;\n//     return hero;\n// }\n// const spiderman = Hero('Spiderman');\n// spiderman.saludar();\n// const venom = Hero('Venom');\n// venom.saludar();\n//Los metodos de hero dentro de Hero\n// const heroMethods = {\n//     saludar: function () {\n//         console.log(`Soy el superheroe ${this.name}`)\n//     }\n// }\n// function Hero(name) {\n//     const hero = Object.create(Hero.prototype);\n//     hero.name = name;\n//     return hero;\n// }\n// Hero.prototype.saludar = function () {\n//     console.log(`Soy superpoderoso ${this.name}`)\n// }\n// const spiderman = Hero('Spiderman');\n// spiderman.saludar();\n// const venom = Hero('Venom');\n// venom.saludar();\n// new es un atajo(Azucar sintatica) para llevar Hero.prototype al objecto\nfunction Hero(name) {\n  // const hero = Object.create(Hero.prototype);\n  this.name = name; // return this;\n}\n\nHero.prototype.saludar = function () {\n  console.log(\"New \".concat(this.name));\n};\n\nvar spiderman = new Hero('Spiderman');\nspiderman.saludar();\nvar venom = new Hero('Venom');\nvenom.saludar();</script>\r\n\r\n</body>\r\n\r\n</html>"},"sourceMaps":null,"error":null,"hash":"39d0b1c80883c83c44f878e5403b86a0","cacheData":{"env":{}}}